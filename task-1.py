import random

class GameField:
    def __init__(self, width, height):
        self.width = width
        self.height = height
        self.field = [['.' for _ in range(self.width)] for _ in range(self.height)]  # –°–æ–∑–¥–∞–µ–º –ø—É—Å—Ç–æ–µ –ø–æ–ª–µ

    def display(self, helicopter):
        # –°–æ–∑–¥–∞–µ–º –∫–æ–ø–∏—é –ø–æ–ª—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤–µ—Ä—Ç–æ–ª–µ—Ç–∞
        display_field = [row.copy() for row in self.field]

        # –†–∞–∑–º–µ—â–∞–µ–º –≤–µ—Ä—Ç–æ–ª–µ—Ç –Ω–∞ –ø–æ–ª–µ
        display_field[helicopter.y][helicopter.x] = 'üöÅ'  # –≠–º–æ–¥–∑–∏ –¥–ª—è –≤–µ—Ä—Ç–æ–ª–µ—Ç–∞
        
        for row in display_field:
            print(' '.join(row))
        print("\n")

    def is_within_bounds(self, x, y):
        return 0 <= x < self.width and 0 <= y < self.height

    def place_trees(self, num_trees):
        for _ in range(num_trees):
            x, y = random.randint(0, self.width - 1), random.randint(0, self.height - 1)
            self.field[y][x] = 'üå≥'  # –≠–º–æ–¥–∑–∏ –¥–ª—è –¥–µ—Ä–µ–≤–∞

    def place_rivers(self, num_rivers):
        for _ in range(num_rivers):
            x, y = random.randint(0, self.width - 1), random.randint(0, self.height - 1)
            self.field[y][x] = 'üíß'  # –≠–º–æ–¥–∑–∏ –¥–ª—è —Ä–µ–∫–∏

    def ignite_trees(self, num_fires):
        for _ in range(num_fires):
            x, y = random.randint(0, self.width - 1), random.randint(0, self.height - 1)
            if self.field[y][x] == 'üå≥':  # –ï—Å–ª–∏ –Ω–∞ –∫–ª–µ—Ç–∫–µ –¥–µ—Ä–µ–≤–æ
                self.field[y][x] = 'üî•'  # –ü–æ–¥–∂–∏–≥–∞–µ–º –µ–≥–æ
        print("–ù–µ–∫–æ—Ç–æ—Ä—ã–µ –¥–µ—Ä–µ–≤—å—è –∑–∞–≥–æ—Ä–µ–ª–∏—Å—å.")

    def spread_fire(self):
        new_fires = []
        for y in range(self.height):
            for x in range(self.width):
                if self.field[y][x] == 'üî•':  # –ï—Å–ª–∏ –Ω–∞ –∫–ª–µ—Ç–∫–µ –æ–≥–æ–Ω—å
                    for dx, dy in [(-1, 0), (1, 0), (0, -1), (0, 1)]:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å–µ–¥–Ω–∏–µ –∫–ª–µ—Ç–∫–∏
                        nx, ny = x + dx, y + dy
                        if self.is_within_bounds(nx, ny) and self.field[ny][nx] == 'üå≥':
                            new_fires.append((nx, ny))  # –ó–∞–ø–æ–º–∏–Ω–∞–µ–º, –≥–¥–µ –Ω–æ–≤—ã–π –æ–≥–æ–Ω—å
        for nx, ny in new_fires:
            self.field[ny][nx] = 'üî•'
        print("–ü–æ–∂–∞—Ä —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–∏–ª—Å—è.")

class Helicopter:
    def __init__(self, x, y):
        self.x = x
        self.y = y
        self.water = 0  # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–æ–¥—ã –≤ —Ä–µ–∑–µ—Ä–≤—É–∞—Ä–µ
        self.max_water = 1
        self.health = 3

    def move(self, direction, field):
        if direction == 'up' and field.is_within_bounds(self.x, self.y - 1):
            self.y -= 1
        elif direction == 'down' and field.is_within_bounds(self.x, self.y + 1):
            self.y += 1
        elif direction == 'left' and field.is_within_bounds(self.x - 1, self.y):
            self.x -= 1
        elif direction == 'right' and field.is_within_bounds(self.x + 1, self.y):
            self.x += 1
        print(f"–í–µ—Ä—Ç–æ–ª–µ—Ç –ø–µ—Ä–µ–º–µ—Å—Ç–∏–ª—Å—è –≤ ({self.x}, {self.y})")

    def take_water(self, field):
        if field.field[self.y][self.x] == 'üíß':  # –ï—Å–ª–∏ –Ω–∞–¥ —Ä–µ–∫–æ–π
            self.water = self.max_water
            print("–í–µ—Ä—Ç–æ–ª–µ—Ç –≤–∑—è–ª –≤–æ–¥—É.")

    def extinguish_fire(self, field):
        if field.field[self.y][self.x] == 'üî•' and self.water > 0:  # –ï—Å–ª–∏ –Ω–∞ –ø–æ–∂–∞—Ä–µ
            field.field[self.y][self.x] = '.'  # –¢—É—à–∏–º –ø–æ–∂–∞—Ä
            self.water -= 1
            print("–ü–æ–∂–∞—Ä –ø–æ—Ç—É—à–µ–Ω!")
        else:
            print("–ó–¥–µ—Å—å –Ω–µ—Ç –ø–æ–∂–∞—Ä–∞ –∏–ª–∏ –Ω–µ—Ç –≤–æ–¥—ã.")

# –°–æ–∑–¥–∞–µ–º –∏–≥—Ä–æ–≤–æ–µ –ø–æ–ª–µ —Ä–∞–∑–º–µ—Ä–æ–º 10x10
game_field = GameField(10, 10)
helicopter = Helicopter(0, 0)

game_field.place_trees(10)
game_field.place_rivers(5)
game_field.display(helicopter)

# –û—Å–Ω–æ–≤–Ω–æ–π –∏–≥—Ä–æ–≤–æ–π —Ü–∏–∫–ª
while True:
    game_field.ignite_trees(1)  # –ü–æ–¥–∂–∏–≥–∞–µ–º –¥–µ—Ä–µ–≤—å—è
    game_field.spread_fire()    # –ü–æ–∂–∞—Ä —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—è–µ—Ç—Å—è
    game_field.display(helicopter)

    command = input("–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É (up, down, left, right, take_water, extinguish): ")

    if command in ['up', 'down', 'left', 'right']:
        helicopter.move(command, game_field)
    elif command == 'take_water':
        helicopter.take_water(game_field)
    elif command == 'extinguish':
        helicopter.extinguish_fire(game_field)
